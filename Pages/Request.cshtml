@page
@model PayGate_SampleCode.Pages.RequestModel
@using System.Text.RegularExpressions;
@using System.Text;
@{
    var processUrl = PaygatePayweb3.process_url;
    var optionalHtml = Html.Raw("");

    var Request = HttpContext.Request.Form;

    //Get the mandatory request data from the request and do some validation checks on it
    //Test for "Reference" is only for these examples
    var mandatoryFields = new Dictionary<string, string>()
{
{"PAYGATE_ID", Regex.IsMatch(Request["PAYGATE_ID"], @"^\d{9,13}$") ? Request["PAYGATE_ID"] : "INVALID ID" },
{"REFERENCE", Regex.IsMatch(Request["REFERENCE"], @"^pgtest_\d{14}$") ? Request["REFERENCE"] : "INVALID REFERENCE" },
{"AMOUNT", Regex.IsMatch(Request["AMOUNT"], @"^\d*\.?\d{0,2}$") ? Request["AMOUNT"] : "INVALID AMOUNT" },
{"CURRENCY", Regex.IsMatch(Request["CURRENCY"], @"^[A-Z]{3}$") ? Request["CURRENCY"] : "INVALID CURRENCY" },
{"RETURN_URL", Regex.IsMatch(Request["RETURN_URL"], @"^(https?:\/\/)?([a-z0-9\.-]+):?\.?([/\w\.-]*)*\/?$") ? Request["RETURN_URL"] : "INVALID RETURN_URL" },
{"TRANSACTION_DATE", Regex.IsMatch(Request["TRANSACTION_DATE"], @"^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$") ? Request["TRANSACTION_DATE"] : "INVALID TRANSACTION DATE" },
{"LOCALE", Regex.IsMatch(Request["LOCALE"], @"^[a-z]{2}-[a-zA-Z]{2}$") ? Request["LOCALE"] : "INVALID LOCALE" },
{"COUNTRY", Regex.IsMatch(Request["COUNTRY"], @"^[A-Z]{3}$") ? Request["COUNTRY"] : "INVALID COUNTRY" },
{"EMAIL", Regex.IsMatch(Request["EMAIL"], @"^([a-z0-9_\.-]+)@([a-z0-9_\.-]+)\.([a-z\.]{2,6})$") ? Request["EMAIL"] : "INVALID EMAIL" },
};

    //Set the session variables needed on the result page
    SessionModel.pgid = mandatoryFields["PAYGATE_ID"];
    SessionModel.reference = mandatoryFields["REFERENCE"];
    SessionModel.key = Request["encryption_key"];

    //Get the optional fields and validate
    var optionalFields = new Dictionary<string, string>()
{
{"PAY_METHOD", Request["PAY_METHOD"] != "" ? Regex.IsMatch(Request["PAY_METHOD"], @"^[a-zA-Z ]{0,10}$") ? Request["PAY_METHOD"] : "INVALID PAY METHOD" : "" },
{"PAY_METHOD_DETAIL", Request["PAY_METHOD_DETAIL"] != "" ? Regex.IsMatch(Request["PAY_METHOD_DETAIL"], @"^[a-zA-Z ]{0,10}$") ? Request["PAY_METHOD_DETAIL"] : "INVALID PAY METHOD" : "" },
{"NOTIFY_URL", Request["NOTIFY_URL"] != "" ? Regex.IsMatch(Request["NOTIFY_URL"], @"^(https?:\/\/)?([a-z0-9\.-]+):?\.?([/\w\.-]*)*\/?$") ? Request["NOTIFY_URL"] : "INVALID URL" : "" },
{"USER1", Request["USER1"] != "" ? Regex.IsMatch(Request["USER1"], @"^[a-zA-Z \d]{0,10}$") ? Request["USER1"] : "INVALID FORMAT" : "" },
{"USER2", Request["USER2"] != "" ? Regex.IsMatch(Request["USER2"], @"^[a-zA-Z \d]{0,10}$") ? Request["USER2"] : "INVALID FORMAT" : "" },
{"USER3", Request["USER3"] != "" ? Regex.IsMatch(Request["USER3"], @"^[a-zA-Z \d]{0,10}$") ? Request["USER3"] : "INVALID FORMAT" : "" },
{"VAULT", Request.Keys.Contains("VAULT") ? Regex.IsMatch(Request["VAULT"], @"^[a-zA-Z \d]{0,10}$") ? Request["VAULT"] : "INVALID FORMAT" : "" },
{"VAULT_ID", Request.Keys.Contains("VAULT_ID") ? Regex.IsMatch(Request["VAULT_ID"], @"^[a-zA-Z \d]{0,10}$") ? Request["VAULT_ID"] : "INVALID FORMAT" : "" },
};

    //Merge the optional fields
    foreach (var item in optionalFields)
    {
        mandatoryFields.Add(item.Key, item.Value);
    }
    var data = mandatoryFields;

    var displayOptionalFields = false;


    foreach (var item in optionalFields)
    {
        if (data[item.Key] != "")
        {
            displayOptionalFields = true;
        }
    }

    //Display optional fields if any
    if (displayOptionalFields)
    {
        StringBuilder optional = new StringBuilder();
        optional.Append("<div class=\"well\">");

        foreach (var item in optionalFields)
        {
            if (data[item.Key] != "")
            {
                optional.Append("<div class=\"form-group\"><label for=\"");
                optional.Append(item.Key);
                optional.Append("\" class=\"col-sm-3 control-label\">");
                optional.Append(item.Key);
                optional.Append("</label><p id=\"");
                optional.Append(item.Key);
                optional.Append("\" class=\"ml-auto\">");
                optional.Append(data[item.Key]);
                optional.Append("</p></div>");
            }
        }
        optional.Append("</div>");
        optionalHtml = Html.Raw(optional.ToString());
    }

    var encryptionKey = Request["encryption_key"];

    //Set session variables
    @*Session["pgid"] = data["PAYGATE_ID"];*@
    @*Session["reference"] = data["REFERENCE"];*@
    @*Session["key"] = encryptionKey;*@

    var pw3 = new PaygatePayweb3();
    pw3.setEncryptionKey(encryptionKey);
    pw3.setInitiateRequest(data);

    var checksum = pw3.generateChecksum(data);

    //Initiate request and check for valid response
    var returnData = pw3.doInitiate();

    StringBuilder results = new StringBuilder();
    var resultsHtml = "";
    StringBuilder resultsForm = new StringBuilder();
    var resultsFormHtml = Html.Raw("");

    if (returnData) //Have a valid response
    {
        if (pw3.lastError == null)
        {
            //There is no error - continue
            foreach (var item in pw3.processRequest)
            {
                results.Append(item.Key + " = " + item.Value + "\n");
            }
            resultsHtml = results.ToString();
        }

        if (pw3.lastError != "")
        {
            //There is no error - continue
            //Check checksums match
            var isValid = pw3.validateChecksum(pw3.initiateResponse);
            if (isValid)
            {
                foreach (var item in pw3.processRequest)
                {
                    resultsForm.Append("<input type=\"hidden\" name=\"" + item.Key + "\" value=\"" + item.Value + "\"/>");
                }
                resultsFormHtml = Html.Raw(resultsForm.ToString());
            }
            else
            {
                resultsForm.Append("The checksums do not match");
                resultsFormHtml = Html.Raw(resultsForm.ToString());
            }
        }
    }
    else
    {
        resultsHtml = "There was an error in the request. Please check your data.";
    }
}

<div class="container container-sm">
    <div class="z-top">Step: Request / Redirect</div>
    <div class="z-nav login">
        <ul class="nav nav-tabs flex-nowrap" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="request-tab" href="#request" role="tab" data-toggle="tab">
                    Request
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="initiate-tab" asp-page="/Index" role="tab">Initiate</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="query-tab" asp-page="/Query">
                    Query
                </a>
            </li>
        </ul>
    </div>
    <div class="tab-content tab-content-basic">
        <div class="tab-pane fade show active" id="request" role="tab-panel">
            <form class="form" class="form-horizontal text-left" id="loginForm" action="@PaygatePayweb3.process_url" method="post" name="paygate_process_form">
                <div class="z-form-group-wrapper">
                    <div class="form-group z-formgroup d-flex">
                        <label for="PAYGATE_ID">PayGate ID</label>
                        <p id="PAYGATE_ID" class="ml-auto">@data["PAYGATE_ID"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="REFERENCE">Reference</label>
                        <p id="REFERENCE" class="ml-auto">@data["REFERENCE"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="AMOUNT">Amount</label>
                        <p id="AMOUNT" class="ml-auto">@data["AMOUNT"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="CURRENCY">Currency</label>
                        <p id="CURRENCY" class="ml-auto">@data["CURRENCY"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="RETURN_URL">Return URL</label>
                        <p id="RETURN_URL" class="ml-auto">@data["RETURN_URL"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="LOCALE">Locale</label>
                        <p id="LOCALE" class="ml-auto">@data["LOCALE"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="COUNTRY">Country</label>
                        <p id="COUNTRY" class="ml-auto">@data["COUNTRY"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="TRANSACTION_DATE">Transaction Date</label>
                        <p id="TRANSACTION_DATE" class="ml-auto">@data["TRANSACTION_DATE"]</p>
                    </div>
                    <div class="form-group z-formgroup d-flex">
                        <label for="EMAIL">Customer Email</label>
                        <p id="EMAIL" class="ml-auto">@data["EMAIL"]</p>
                    </div>
                    @optionalHtml
                    <div class="form-group z-formgroup d-flex">
                        <label for="encryption_key">Encryption Key</label>
                        <p id="encryption_key" class="ml-auto">@encryptionKey</p>
                    </div>
                    <div class="form-group z-formgroup">
                        <label for="request">Request Result</label><br>
                        <textarea class="form-control" rows="3" cols="50" id="request">@resultsHtml</textarea>
                        <p>@resultsFormHtml</p>
                    </div>
                </div>

                <div class="z-buttons">
                    <input class="btn btn-success" type="submit" name="btnSubmit" value="Redirect" />
                    <p id="loginimageregister">
                        <img src="~/images/PayGate_logo.svg" alt="logo" width="150px">
                    </p>
                </div>
                <br>
            </form>
        </div>
    </div>
</div>

